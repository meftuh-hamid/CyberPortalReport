/**
* DevExpress HTML/JS Reporting (designer\controls\metadata\xrShape.js)
* Version:  22.2.4
* Build date: Jan 25, 2023
* Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { colorFromString, colorToString, floatFromModel, parseBool } from '@devexpress/analytics-core/analytics-utils';
import { editorTemplates } from '@devexpress/analytics-core/analytics-widgets';
import { dataBindings } from '../../dataObjects/metadata/dataBinding';
import { designerEditorTemplates } from '../../widgets/editorTemplates';
import { anchorHorizontal, anchorVertical } from './properties/anchoring';
import { angle, foreColor, lineStyle, lineWidth } from './properties/metadata';
import { commonControlProperties, navigationGroup, sizeLocation } from './properties/metadataGroups';
import { controlScripts } from './properties/scriptMetadata';
var shapes = {
    'Rectangle': 'Rectangle',
    'Ellipse': 'Ellipse',
    'Top Arrow': 'Top Arrow',
    'Right Arrow': 'Right Arrow',
    'Bottom Arrow': 'Bottom Arrow',
    'Left Arrow': 'Left Arrow',
    'Triangle': 'Triangle',
    'Square': 'Square',
    'Pentagon': 'Pentagon',
    'Hexagon': 'Hexagon',
    'Octagon': 'Octagon',
    '3-Point Star': '3-Point Star',
    '4-Point Star': '4-Point Star',
    '5-Point Star': '5-Point Star',
    '6-Point Star': '6-Point Star',
    '8-Point Star': '8-Point Star',
    'Vertical Line': 'Vertical Line',
    'Horizontal Line': 'Horizontal Line',
    'Slant Line': 'Slant Line',
    'Backslant Line': 'Backslant Line',
    'Cross': 'Cross',
    'Bracket': 'Bracket',
    'Brace': 'Brace'
};
export var shapeType = { propertyName: 'shapeType', modelName: '@ShapeName', defaultVal: 'Ellipse' };
export var stretch = { propertyName: 'stretch', modelName: '@Stretch', defaultVal: false, from: parseBool, editor: editorTemplates.getEditor('bool'), displayName: 'Stretch', localizationId: 'DevExpress.XtraReports.UI.XRShape.Stretch' };
export var fillColor = { propertyName: 'fillColor', modelName: '@FillColor', defaultVal: 'transparent', editor: editorTemplates.getEditor('customColorEditor'), from: colorFromString, toJsonObject: colorToString, displayName: 'Fill Color', localizationId: 'DevExpress.XtraReports.UI.XRShape.FillColor' };
export var Shape = { propertyName: 'Shape', modelName: 'Shape' };
export var shapeFake = { propertyName: 'shapeFake', editor: designerEditorTemplates.getEditor('contentByType'), displayName: 'Shape', values: shapes, localizationId: 'DevExpress.XtraReports.UI.XRShape.Shape' };
export var shapeElementSerializationsInfo = [shapeType];
var fillet = { propertyName: 'fillet', modelName: '@Fillet', defaultVal: 0, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Fillet', localizationId: 'DevExpress.XtraPrinting.Shape.FilletShapeBase.Fillet' };
var shapeRectangleSerializationsInfo = [shapeType, fillet];
var shapeStarSerializationsInfo = [
    shapeType,
    { propertyName: 'concavity', modelName: '@Concavity', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Concavity', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeStar.Concavity' },
    { propertyName: 'starPointCount', modelName: '@StarPointCount', defaultVal: 3, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Count of Star Points', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeStar.StarPointCount' },
    fillet
];
var shapeBraceSerializationsInfo = [
    shapeType,
    { propertyName: 'fillet', modelName: '@Fillet', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Fillet', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBrace.Fillet' },
    { propertyName: 'tailLength', modelName: '@TailLength', defaultVal: 20, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: "Tail\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBrace.TailLength' },
    { propertyName: 'tipLength', modelName: '@TipLength', defaultVal: 20, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: "Tip\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBracket.TipLength' }
];
var shapeBracketSerializationsInfo = [
    shapeType,
    { propertyName: 'tipLength', modelName: '@TipLength', defaultVal: 20, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: "Tip\'s Length", localizationId: 'DevExpress.XtraPrinting.Shape.ShapeBracket.TipLength' }
];
var shapePolygonSerializationsInfo = [
    shapeType, fillet,
    { propertyName: 'numberOfSides', modelName: '@NumberOfSides', defaultVal: 3, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Number of Sides', localizationId: 'DevExpress.XtraPrinting.Shape.ShapePolygon.NumberOfSides' },
];
var shapeArrowSerializationsInfo = [
    shapeType,
    { propertyName: 'arrowHeight', modelName: '@ArrowHeight', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Arrow Height', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeArrow.ArrowHeight' },
    { propertyName: 'arrowWidth', modelName: '@ArrowWidth', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Arrow Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeArrow.ArrowWidth' },
    fillet
];
var shapeCrossSerializationsInfo = [
    shapeType, fillet,
    { propertyName: 'horizontalLineWidth', modelName: '@HorizontalLineWidth', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Horizontal Line Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeCross.HorizontalLineWidth' },
    { propertyName: 'verticalLineWidth', modelName: '@VerticalLineWidth', defaultVal: 50, from: floatFromModel, editor: editorTemplates.getEditor('numeric'), displayName: 'Vertical Line Width', localizationId: 'DevExpress.XtraPrinting.Shape.ShapeCross.VerticalLineWidth' }
];
export var shapesMap = {
    'Rectangle': shapeRectangleSerializationsInfo,
    'Arrow': shapeArrowSerializationsInfo,
    'Ellipse': shapeElementSerializationsInfo,
    'Polygon': shapePolygonSerializationsInfo,
    'Star': shapeStarSerializationsInfo,
    'Line': shapeElementSerializationsInfo,
    'Bracket': shapeBracketSerializationsInfo,
    'Cross': shapeCrossSerializationsInfo,
    'Brace': shapeBraceSerializationsInfo
};
export var shapeSerializationsInfo = [
    lineWidth, lineStyle, foreColor, Shape, fillColor, stretch, angle, anchorVertical, anchorHorizontal, controlScripts, shapeFake,
    dataBindings(['Bookmark', 'NavigateUrl', 'Tag']),
].concat(sizeLocation, commonControlProperties, navigationGroup);
export var popularPropertiesShape = ['stretch', 'fillColor', 'lineWidth', 'angle', 'bookmark', 'bookmarkParent', 'shapeFake'];
